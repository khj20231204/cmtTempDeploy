<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ProductMapper.java 경로로 클래스명 ProductMapper까지 입력 --> 
<mapper namespace="com.example.cmtProject.mapper.mes.production.WorkOrderMapper">
	<!-- 작업지시 목록 -->
	<select id="selectOrderList" resultType="com.example.cmtProject.dto.mes.production.WorkOrderDTO">
	<!-- 근데 여기는 MFG_SCHEDULES을 가져와야하지 않나   -->
		SELECT
			  W.WO_NO
			, W.WO_CODE
			, W.PDT_CODE
			, P.PRC_TYPE_CODE
			, W.ORDER_DATE
			, S.WO_STATUS_CODE
			, S.WO_STATUS_NAME
			, W.STATUS
			, W.DUE_DATE
			, W.COMMENTS
			, W.USE_YN
			, W.WO_START_DATE
 			, W.WO_END_DATE  
            , P.PDT_NAME 
            , E.EMP_NAME
			, W.WO_QTY AS SO_QTY
			, M.MS_CODE
            
		  FROM WORK_ORDER W 
		          LEFT JOIN PRODUCTS P ON W.PDT_CODE = P.PDT_CODE
		          LEFT JOIN EMPLOYEES E ON W.EMP_ID = E.EMP_ID
		          LEFT JOIN WORK_ORDER_STATUS S ON W.WO_STATUS_CODE = S.WO_STATUS_CODE
		          LEFT JOIN MFG_SCHEDULES M ON W.MS_CODE = M.MS_CODE
		 ORDER BY WORK_ORDER_NO DESC
	</select>
	<!-- 제조계획 리스트 - 모달 -->
	<select id="selectPlanList" resultType="com.example.cmtProject.dto.mes.manufacturingMgt.MfgScheduleDTO">
		SELECT 
		    S.MS_NO
		    , S.MS_CODE
		    , S.PDT_CODE
		    , P.PDT_NAME
		    , P.PRC_TYPE_CODE
		    , P.PDT_TYPE
		    , S.SO_QTY
		   -- , S.MS_START_TIME 
		   -- , S.MS_END_TIME 
		    , S.EMP_ID
		    , S.MP_PRIORITY
		    , S.MS_STATUS
		    , S.MS_UPDATED_AT
		    --, S.PRC_CODE
		    , S.MP_CODE
		    , E.EMP_NAME
		    -- , S.SO_QTY
		    --  , S.PDT_PRC_TYPE_CODE
		FROM MFG_SCHEDULES S JOIN PRODUCTS P ON S.PDT_CODE = P.PDT_CODE
							JOIN EMPLOYEES E ON S.EMP_ID = E.EMP_ID
		WHERE  MS_STATUS = '등록'
		ORDER BY S.MS_NO DESC
	</select>
	<!-- 제조계획리스트 -> workOrder 테이블에 insert -->
	<insert id="insertMsPlan"  parameterType="com.example.cmtProject.dto.mes.production.WorkOrderDTO">
		INSERT INTO WORK_ORDER(
		 	WO_NO
			 , WO_CODE
			 , PDT_CODE
			 , PDT_NAME
			 , WO_QTY
			 , EMP_ID
			 , LINE_CODE
			 , PRC_CODE
			 , WORK_START_DATE
			 , WORK_END_DATE
			 , MS_CODE
			 , WORK_ORDER_NO
		) VALUES (
			#{woNo}
			, #{woCode, jdbcType=VARCHAR}
			, #{pdtCode, jdbcType=VARCHAR}
			, #{pdtName, jdbcType=VARCHAR}
			, #{soQty, jdbcType=VARCHAR}
			, #{empId}
			, #{lineCode, jdbcType=VARCHAR}
			, #{prcCode, jdbcType=VARCHAR}
			, #{msStartDate, jdbcType=DATE}
			, NULL
			, #{msCode, jdbcType=VARCHAR}
			, #{workOrderNo, jdbcType=NUMERIC}
		)
	</insert>
	<update id="updateMfgStatus">
		UPDATE WORK_ORDER
		SET WO_STATUS_CODE = 'SB'
		WHERE WO_CODE = #{woCode}
	</update>
	
	<!--MFG_SCHEDULES - 대기로 변경-->
	<update id="updateMfgStatus2"> 
		UPDATE MFG_SCHEDULES SET MS_STATUS = '대기'
		WHERE MS_CODE = (SELECT MS_CODE FROM WORK_ORDER WHERE WO_CODE = #{woCode}) 
	</update>
	
<!--	<delete id="deleteMfgList">-->
<!--		DELETE FROM MFG_SCHEDULES -->
<!--		WHERE MS_CODE = #{msCode}-->
<!--	</delete>-->
	
	
	<!-- 작업시작 버튼 = 날짜 업데이트&진행중 -->
	<update id="updateWorkStartTime">
		 UPDATE WORK_ORDER
	     SET WO_START_DATE = SYSDATE 
	    	 , WO_STATUS_CODE = 'PS' 
	     WHERE WO_NO = #{woNo}
	</update>
	
	<!-- 로트번호로 단일제품 정보 들고오기 LOT DETAIL -->
	<select id="selectLotNoDetail" resultType="com.example.cmtProject.dto.mes.production.LotDTO">
		SELECT 
		    L.*, 
		    W.PDT_NAME,
		    E.EMP_NAME
		    ,  P.PRC_TYPE_NAME
		    , W.WO_STATUS_CODE
		    , S.WO_STATUS_NAME
		FROM 
		    LOT L
		JOIN 
		    WORK_ORDER W ON L.WO_CODE = W.WO_CODE
		LEFT JOIN 
		    EMPLOYEES E ON W.EMP_ID = E.EMP_ID
	    LEFT JOIN 
	    	PROCESS_INFO P ON L.PRC_TYPE = P.PRC_TYPE_CODE
	    LEFT JOIN 
	    	WORK_ORDER_STATUS S ON W.WO_STATUS_CODE = S.WO_STATUS_CODE
		WHERE 
		    L.LOT_NO = #{lotNo}
	</select>
	
	<!-- 로트번호 뿌리기 -->
	<select id="selectLotDetail" resultType="com.example.cmtProject.dto.mes.production.LotDTO">
		SELECT L.*,W.PDT_NAME
		FROM LOT L LEFT JOIN WORK_ORDER W ON L.WO_CODE = W.WO_CODE
	</select>
	
	
	<!-- 계층구조로 로트번호 리스트 뿌리기 -->
	<select id="selectAllLotTree" resultType="com.example.cmtProject.dto.mes.production.LotDTO">
		SELECT    
		    LEVEL,
		    L.LOT_NO,
		    L.CHILD_LOT_CODE,
		    L.PARENT_LOT_CODE,
		    L.CHILD_PDT_CODE,
		    L.PARENT_PDT_CODE,
		    L.PRC_TYPE,
		    L.START_TIME,
		    L.FINISH_TIME,
		    L.WO_QTY,
		    W.PDT_NAME,
		    W.WO_STATUS_CODE,
		    S.WO_STATUS_NAME,
		    E.EMP_NAME,
		    P.PRC_TYPE_NAME,
		    CONNECT_BY_ISLEAF AS IS_LEAF,
		    PRIOR L.CHILD_LOT_CODE AS NEXT_LOT_CODE,
		    SYS_CONNECT_BY_PATH(L.CHILD_LOT_CODE, '← ') AS PATH
		FROM LOT L
		LEFT JOIN WORK_ORDER W ON L.WO_CODE = W.WO_CODE
		LEFT JOIN PROCESS_INFO P ON L.PRC_TYPE = P.PRC_TYPE_CODE
		LEFT JOIN EMPLOYEES E ON W.EMP_ID = E.EMP_ID
		LEFT JOIN WORK_ORDER_STATUS S ON W.WO_STATUS_CODE = S.WO_STATUS_CODE
		-- 완제품 루트
		START WITH L.CHILD_LOT_CODE NOT IN (
		    SELECT DISTINCT PARENT_LOT_CODE FROM LOT WHERE PARENT_LOT_CODE IS NOT NULL
		)
		-- 루트 → 구성품 방향
		CONNECT BY L.CHILD_LOT_CODE = PRIOR L.PARENT_LOT_CODE
		ORDER SIBLINGS BY L.LOT_NO

	</select>
	
	<!--  특정 lot기준으로 그 하위공정 목록만 조회 -->
	<select id="selectLotProcessListByLotNo" resultType="com.example.cmtProject.dto.mes.production.LotDTO">
		SELECT
		  L.LOT_NO,
		  L.CHILD_LOT_CODE,
		  L.PARENT_LOT_CODE,
		  L.CHILD_PDT_CODE,
		  W.PDT_NAME,
		  L.PRC_TYPE,
		  L.START_TIME,
		  L.FINISH_TIME,
		--  W.EMP_NAME,
		  W.WO_STATUS_CODE,
		  S.WO_STATUS_NAME,
		  L.WO_QTY,
		  P.PRC_TYPE_NAME,
		  E.EMP_NAME
		FROM LOT L
		LEFT JOIN WORK_ORDER W ON L.WO_CODE = W.WO_CODE
		LEFT JOIN PROCESS_INFO P ON L.PRC_TYPE = P.PRC_TYPE_CODE
		LEFT JOIN EMPLOYEES E ON W.EMP_ID = E.EMP_ID
		LEFT JOIN WORK_ORDER_STATUS S ON W.WO_STATUS_CODE = S.WO_STATUS_CODE
		START WITH L.CHILD_LOT_CODE = #{childLotCode}
		CONNECT BY PRIOR L.CHILD_LOT_CODE = L.PARENT_LOT_CODE
	--	CONNECT BY PRIOR L.PARENT_LOT_CODE = L.CHILD_LOT_CODE
		ORDER SIBLINGS BY L.PRC_TYPE
	</select>
	
  <select id="selectCompleteStatsLast7Days"  resultType="com.example.cmtProject.dto.mes.production.WorkOrderDTO">
<!--     SELECT TO_CHAR(WO_END_DATE, 'YYYY-MM-DD') AS workDate, -->
<!--            COUNT(*) AS completeCount  -->
<!--     FROM WORK_ORDER -->
<!--     WHERE WO_END_DATE BETWEEN SYSDATE - 6 AND SYSDATE -->
<!--       AND WO_STATUS_CODE = 'CP' -->
<!--     GROUP BY TO_CHAR(WO_END_DATE, 'YYYY-MM-DD') -->
<!--     ORDER BY workDate -->
    
    <!-- LOT기준으로 그래프 그리기 >>> 값이 하루에만 너무 많아짐 -->
    SELECT TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS workDate,
       COUNT(*) AS completeCount 
	FROM LOT
	WHERE CREATE_DATE BETWEEN TRUNC(SYSDATE) - 6 AND TRUNC(SYSDATE) + 0.99999
	  AND WO_STATUS_NO = 'CP'
	GROUP BY TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
	ORDER BY workDate
  </select>
  
  <!-- lotNo로 품질이력 들고오기 -->
  <select id="selectQualityHistory" resultType="com.example.cmtProject.dto.mes.production.LotDTO">
  	SELECT 
	  	IPI_START_TIME
	  	,IPI_END_TIME 
	  	,IPI_MEASURED_LENGTH_VALUE
	  	,IPI_MEASURED_WEIGHT_VALUE
	  	,IPI_INSPECTION_RESULT
	  	,CHILD_LOT_CODE
	  	,QCM_NAME
	  	,LOT_NO
	  	,EMP_NAME
  	  FROM IPI 
  	 WHERE LOT_NO = #{lotNo}
  </select>
  
  <select id="selectTodayProcessTop5"  resultType="com.example.cmtProject.dto.mes.production.LotDTO">
	  SELECT 
		    P.PRC_TYPE_NAME AS processName, 
		    COUNT(*) AS incompleteCount
		FROM LOT L
		LEFT JOIN PROCESS_INFO P ON L.PRC_TYPE = P.PRC_TYPE_CODE
		WHERE L.CREATE_DATE BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE) + 0.99999
		  AND L.WO_STATUS_NO != 'CP' -- 미완료만
		GROUP BY P.PRC_TYPE_NAME
		ORDER BY incompleteCount DESC
		FETCH FIRST 5 ROWS ONLY
  </select>
  
  <select id="getWoNoMax" resultType="Long">
  		SELECT MAX(WO_NO) 
  		  FROM WORK_ORDER
  </select>
  
  <select id="getWoCodeLast" resultType="String">
  	  SELECT WO_CODE
	  FROM WORK_ORDER
	  WHERE WO_NO = (SELECT NVL(MAX(WO_NO),0) FROM WORK_ORDER)
  </select>
  <!-- LOT검색 -->
  <select id="findLotsByKeyword" parameterType="String" resultType="com.example.cmtProject.dto.mes.production.LotDTO">
  	SELECT 
	    L.*, 
	    W.PDT_NAME
	  FROM LOT L
	  LEFT JOIN WORK_ORDER W ON L.WO_CODE = W.WO_CODE
	  WHERE LOWER(L.CHILD_LOT_CODE) LIKE LOWER(#{keyword})
	     OR LOWER(L.WO_CODE) LIKE LOWER(#{keyword})
	     OR LOWER(W.PDT_NAME) LIKE LOWER(#{keyword})
  </select>
</mapper>
	