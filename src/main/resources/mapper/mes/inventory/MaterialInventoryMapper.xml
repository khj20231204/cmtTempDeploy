<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.cmtProject.mapper.mes.inventory.MaterialInventoryMapper">
    
    <!-- 재고 목록 조회 -->
    <select id="mInventoryList" resultType="map" parameterType="map">
        SELECT
            MI.INV_NO,                <!--  재고 관리번호 -->
            MI.MTL_CODE,              <!--  자재 코드 -->
            M.MTL_NAME,               <!--  자재명 -->
            MI.WAREHOUSE_CODE,        <!--  창고 코드 -->
            MI.LOCATION_CODE,         <!--  위치 코드 -->
            MI.CURRENT_QTY,           <!--  현재 수량 -->
            MI.ALLOCATED_QTY,         <!--  할당 수량 -->
            MI.AVAILABLE_QTY,         <!--  가용 수량 -->
            MI.LOT_NO,                <!--  LOT 번호 -->
            MI.LAST_MOVEMENT_DATE,    <!--  마지막 이동일 -->
            MI.LAST_ADJUSTMENT_DATE,  <!--  마지막 조정 일자 -->
            MI.ADJUSTMENT_REASON,     <!--  조정 사유 -->
            MI.SAFETY_STOCK_ALERT,    <!--  안전재고 알림 여부 -->
            MI.CREATED_BY,            <!--  생성자 -->
            MI.UPDATED_BY,            <!--  수정자 -->
            MI.CREATED_DATE,          <!--  생성일자 -->
            MI.UPDATED_DATE           <!--  수정일자 -->
        FROM
            MATERIAL_INVENTORY MI
        JOIN
            MATERIALS M
        ON
            MI.MTL_CODE = M.MTL_CODE
        <where>
            <if test="keyword != null and keyword != ''">
                (
                    MI.MTL_CODE LIKE '%' || #{keyword} || '%' OR
                    M.MTL_NAME LIKE '%' || #{keyword} || '%' OR
                    MI.WAREHOUSE_CODE LIKE '%' || #{keyword} || '%' OR
                    MI.LOCATION_CODE LIKE '%' || #{keyword} || '%'
                )
            </if>
        </where>
        ORDER BY MI.MTL_CODE ASC, MI.WAREHOUSE_CODE ASC, MI.LOCATION_CODE ASC
    </select>
    
    <!-- 자재코드별 재고 정보 조회 -->
    <select id="getInventoryByMtlCode" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            INV_NO, 
            MTL_CODE, 
            WAREHOUSE_CODE, 
            LOCATION_CODE, 
            CURRENT_QTY, 
            ALLOCATED_QTY, 
            AVAILABLE_QTY, 
            LAST_MOVEMENT_DATE
        FROM 
            MATERIAL_INVENTORY
        WHERE 
            MTL_CODE = #{mtlCode}
    </select>
    
    <!-- 재고 정보 병합 (추가 또는 업데이트) -->
    <update id="mergeInventory" parameterType="java.util.Map">
        MERGE INTO MATERIAL_INVENTORY a
        USING (
            SELECT 
                #{mtlCode} as MTL_CODE, 
                #{warehouseCode} as WAREHOUSE_CODE, 
                #{locationCode} as LOCATION_CODE, 
                #{receivedQty} as RECEIVED_QTY
            FROM DUAL
        ) b
        ON (
            a.MTL_CODE = b.MTL_CODE 
            AND a.WAREHOUSE_CODE = b.WAREHOUSE_CODE 
            AND a.LOCATION_CODE = b.LOCATION_CODE
        )
        WHEN MATCHED THEN
            UPDATE SET 
                a.CURRENT_QTY = TO_CHAR(TO_NUMBER(a.CURRENT_QTY) + TO_NUMBER(b.RECEIVED_QTY)),
                a.LAST_MOVEMENT_DATE = SYSDATE,
                a.UPDATED_BY = #{updatedBy},
                a.UPDATED_DATE = SYSDATE
        WHEN NOT MATCHED THEN
            INSERT (
                INV_NO, 
                MTL_CODE, 
                WAREHOUSE_CODE, 
                LOCATION_CODE, 
                CURRENT_QTY, 
                ALLOCATED_QTY, 
                AVAILABLE_QTY, 
                LAST_MOVEMENT_DATE, 
                CREATED_BY, 
                CREATED_DATE
            )
            VALUES (
                SEQ_MATERIAL_INVENTORY.NEXTVAL, 
                b.MTL_CODE, 
                b.WAREHOUSE_CODE, 
                b.LOCATION_CODE,
                b.RECEIVED_QTY, 
                '0', 
                b.RECEIVED_QTY,
                SYSDATE, 
                #{updatedBy}, 
                SYSDATE
            )
    </update>
    
    <!-- 재고 차감 처리 -->
    <update id="deductInventory" parameterType="java.util.Map">
        UPDATE MATERIAL_INVENTORY
        SET 
            CURRENT_QTY = TO_CHAR(TO_NUMBER(CURRENT_QTY) - TO_NUMBER(#{consumptionQty})),
            LAST_MOVEMENT_DATE = SYSDATE,
            UPDATED_BY = #{updatedBy},
            UPDATED_DATE = SYSDATE
        WHERE 
            MTL_CODE = #{mtlCode}
    </update>
    
    <!-- 재고 정보 등록 -->
    <insert id="insertInventory" parameterType="java.util.Map">
        INSERT INTO MATERIAL_INVENTORY (
            INV_NO,
            MTL_CODE,
            WAREHOUSE_CODE,
            LOCATION_CODE,
            CURRENT_QTY,
            ALLOCATED_QTY,
            LOT_NO,
            LAST_MOVEMENT_DATE,
            SAFETY_STOCK_ALERT,
            CREATED_BY,
            CREATED_DATE
        ) VALUES (
            SEQ_MATERIAL_INVENTORY.NEXTVAL,
            #{MTL_CODE},
            #{WAREHOUSE_CODE},
            #{LOCATION_CODE},
            #{CURRENT_QTY},
            #{ALLOCATED_QTY},
            #{LOT_NO, jdbcType=VARCHAR},
            SYSDATE,
            #{SAFETY_STOCK_ALERT, jdbcType=VARCHAR},
            #{updatedBy},
            SYSDATE
        )
    </insert>
    
    <!-- 재고 정보 수정 -->
    <update id="updateInventory" parameterType="java.util.Map">
        UPDATE MATERIAL_INVENTORY
        SET
            MTL_CODE = #{MTL_CODE},
            WAREHOUSE_CODE = #{WAREHOUSE_CODE},
            LOCATION_CODE = #{LOCATION_CODE},
            CURRENT_QTY = #{CURRENT_QTY},
            ALLOCATED_QTY = #{ALLOCATED_QTY},
            LOT_NO = #{LOT_NO, jdbcType=VARCHAR},
            LAST_MOVEMENT_DATE = SYSDATE,
            SAFETY_STOCK_ALERT = #{SAFETY_STOCK_ALERT, jdbcType=VARCHAR},
            UPDATED_BY = #{updatedBy},
            UPDATED_DATE = SYSDATE
        WHERE
            INV_NO = #{INV_NO}
    </update>
</mapper>