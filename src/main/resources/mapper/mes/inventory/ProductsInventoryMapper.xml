<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.cmtProject.mapper.mes.inventory.ProductsInventoryMapper">
    
    <!-- 재고 목록 조회 -->
    <select id="pInventoryList" resultType="map" parameterType="map">
        SELECT
            PI.PINV_NO,                   <!--  재고 관리번호 -->
            PI.PDT_NO,                    <!--  제품 번호 -->
            PI.PDT_CODE,                  <!--  제품 코드 -->
            P.PDT_NAME,                   <!--  제품명 -->
            PI.WAREHOUSE_CODE,            <!--  창고 코드 -->
            PI.LOCATION_CODE,             <!--  위치 코드 -->
            PI.CURRENT_QTY,               <!--  현재 수량 -->
            PI.ALLOCATED_QTY,             <!--  할당 수량 -->
            PI.AVAILABLE_QTY,             <!--  가용 수량 -->
            PI.LOT_NO,                    <!--  LOT 번호 -->
            PI.LAST_MOVEMENT_DATE,        <!--  마지막 이동일 -->
            PI.LAST_ADJUSTMENT_DATE,      <!--  마지막 조정 일자 -->
            PI.ADJUSTMENT_REASON,         <!--  조정 사유 -->
            PI.SAFETY_STOCK_ALERT,        <!--  안전재고 알림 여부 -->
            PI.CREATED_BY,                <!--  생성자 -->
            PI.UPDATED_BY,                <!--  수정자 -->
            PI.CREATED_DATE,              <!--  생성일자 -->
            PI.UPDATED_DATE               <!--  수정일자 -->
        FROM
            PRODUCTS_INVENTORY PI
        JOIN
            PRODUCTS P
        ON
            PI.PDT_CODE = P.PDT_CODE
        <where>
            <if test="keyword != null and keyword != ''">
                (
                    PI.PDT_CODE LIKE '%' || #{keyword} || '%' OR
                    P.PDT_NAME LIKE '%' || #{keyword} || '%' OR
                    PI.WAREHOUSE_CODE LIKE '%' || #{keyword} || '%' OR
                    PI.LOCATION_CODE LIKE '%' || #{keyword} || '%' OR
                    PI.LOT_NO LIKE '%' || #{keyword} || '%'
                )
            </if>
        </where>
        ORDER BY PI.PDT_CODE ASC, PI.WAREHOUSE_CODE ASC, PI.LOCATION_CODE ASC
    </select>
    
    <!-- 제품코드별 재고 정보 조회 -->
    <select id="getInventoryByPdtCode" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            PINV_NO, 
            PDT_CODE, 
            WAREHOUSE_CODE, 
            LOCATION_CODE, 
            CURRENT_QTY, 
            ALLOCATED_QTY, 
            AVAILABLE_QTY, 
            LAST_MOVEMENT_DATE
        FROM 
            PRODUCTS_INVENTORY
        WHERE 
            PDT_CODE = #{pdtCode}
    </select>
    
    <!-- 재고 정보 병합 (추가 또는 업데이트) -->
    <update id="mergeInventory" parameterType="java.util.Map">
        MERGE INTO PRODUCTS_INVENTORY a
        USING (
            SELECT 
                #{pdtCode} as PDT_CODE, 
                #{warehouseCode} as WAREHOUSE_CODE, 
                #{locationCode} as LOCATION_CODE, 
                #{receivedQty} as RECEIVED_QTY
            FROM DUAL
        ) b
        ON (
            a.PDT_CODE = b.PDT_CODE 
            AND a.WAREHOUSE_CODE = b.WAREHOUSE_CODE 
            AND a.LOCATION_CODE = b.LOCATION_CODE
        )
        WHEN MATCHED THEN
            UPDATE SET 
                a.CURRENT_QTY = TO_CHAR(TO_NUMBER(a.CURRENT_QTY) + TO_NUMBER(b.RECEIVED_QTY)),
                a.LAST_MOVEMENT_DATE = SYSDATE,
                a.UPDATED_BY = #{updatedBy},
                a.UPDATED_DATE = SYSDATE
        WHEN NOT MATCHED THEN
            INSERT (
                PINV_NO, 
                PDT_CODE, 
                WAREHOUSE_CODE, 
                LOCATION_CODE, 
                CURRENT_QTY, 
                ALLOCATED_QTY, 
                AVAILABLE_QTY, 
                LAST_MOVEMENT_DATE, 
                CREATED_BY, 
                CREATED_DATE
            )
            VALUES (
                SEQ_PRODUCTS_INVENTORY.NEXTVAL, 
                b.PDT_CODE, 
                b.WAREHOUSE_CODE, 
                b.LOCATION_CODE,
                b.RECEIVED_QTY, 
                '0', 
                b.RECEIVED_QTY,
                SYSDATE, 
                #{updatedBy}, 
                SYSDATE
            )
    </update>
    
    <!-- 재고 차감 처리 -->
    <update id="deductInventory" parameterType="java.util.Map">
        UPDATE PRODUCTS_INVENTORY
        SET 
            CURRENT_QTY = TO_CHAR(TO_NUMBER(CURRENT_QTY) - TO_NUMBER(#{consumptionQty})),
            LAST_MOVEMENT_DATE = SYSDATE,
            UPDATED_BY = #{updatedBy},
            UPDATED_DATE = SYSDATE
        WHERE 
            PDT_CODE = #{pdtCode}
    </update>
    
    <!-- 재고 정보 등록 -->
    <insert id="insertInventory" parameterType="java.util.Map">
        INSERT INTO PRODUCTS_INVENTORY (
            PINV_NO,
            PDT_NO,
            PDT_CODE,
            WAREHOUSE_CODE,
            LOCATION_CODE,
            CURRENT_QTY,
            ALLOCATED_QTY,
            AVAILABLE_QTY,
            LOT_NO,
            LAST_MOVEMENT_DATE,
            SAFETY_STOCK_ALERT,
            CREATED_BY,
            CREATED_DATE
        ) VALUES (
            SEQ_PRODUCTS_INVENTORY.NEXTVAL,
            #{PDT_NO, jdbcType=NUMERIC},
            #{PDT_CODE},
            #{WAREHOUSE_CODE},
            #{LOCATION_CODE},
            #{CURRENT_QTY},
            #{ALLOCATED_QTY},
            #{AVAILABLE_QTY},
            #{LOT_NO, jdbcType=VARCHAR},
            SYSDATE,
            #{SAFETY_STOCK_ALERT, jdbcType=VARCHAR},
            #{updatedBy},
            SYSDATE
        )
    </insert>
    
    <!-- 재고 정보 수정 -->
    <update id="updateInventory" parameterType="java.util.Map">
        UPDATE PRODUCTS_INVENTORY
        SET
            PDT_CODE = #{PDT_CODE},
            WAREHOUSE_CODE = #{WAREHOUSE_CODE},
            LOCATION_CODE = #{LOCATION_CODE},
            CURRENT_QTY = #{CURRENT_QTY},
            ALLOCATED_QTY = #{ALLOCATED_QTY},
            AVAILABLE_QTY = #{AVAILABLE_QTY},
            LOT_NO = #{LOT_NO, jdbcType=VARCHAR},
            LAST_MOVEMENT_DATE = SYSDATE,
            SAFETY_STOCK_ALERT = #{SAFETY_STOCK_ALERT, jdbcType=VARCHAR},
            UPDATED_BY = #{updatedBy},
            UPDATED_DATE = SYSDATE
        WHERE
            PINV_NO = #{PINV_NO}
    </update>
</mapper>