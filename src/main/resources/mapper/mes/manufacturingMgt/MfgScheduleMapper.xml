<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.cmtProject.mapper.mes.manufacturingMgt.MfgScheduleMapper">

	<!-- 전체 제조 계획 조회 (상단 그리드) -->
	<select id="getMfgScheduleTotalList" resultType="com.example.cmtProject.dto.mes.manufacturingMgt.MfgScheduleDTO">
		SELECT
			MS.MS_NO
			, MS.MS_CODE
			, MP.MP_CODE
			, SO.SO_QTY
			, CD.CMN_DETAIL_NAME AS qtyUnitName
			, MS.EMP_ID
			, E.EMP_NAME
			, MS.MS_STATUS
			, MP.MP_PRIORITY
			, MS.PDT_CODE
			, P.PDT_NAME
			, MS.MS_CREATED_AT
			, MS.MS_UPDATED_AT
		FROM MFG_SCHEDULES MS
		LEFT JOIN MFG_PLANS MP ON MS.MP_CODE = MP.MP_CODE
		LEFT JOIN SALES_ORDER SO ON SO.SO_CODE = MP.SO_CODE	
		LEFT JOIN COMMONCODE_DETAIL CD ON SO.QTY_UNIT = CD.CMN_DETAIL_CODE									 
		LEFT JOIN EMPLOYEES E ON MP.EMP_ID = E.EMP_ID
		LEFT JOIN PRODUCTS P ON MS.PDT_CODE = P.PDT_CODE
		WHERE MS.MS_VISIBLE = 'Y'
		ORDER BY MS.MS_NO DESC	
	</select>
	
	<!-- 제조 계획 등록 시 생산 계획 내역 조회 (모달의 그리드) -->
	<select id="getMpList" resultType="com.example.cmtProject.dto.mes.manufacturingMgt.MfgSchedulePlanDTO">
		SELECT
			MP.MP_CODE
			, E.EMP_ID
			, E.EMP_NAME
			, SO.SO_QTY
			, CD.CMN_DETAIL_NAME AS qtyUnitName
			, SO.PDT_CODE
			, P.PDT_NAME
			, MP.MP_PRIORITY
			, MP.MP_START_DATE
			, MP.MP_END_DATE
		FROM MFG_PLANS MP
		LEFT JOIN EMPLOYEES E ON MP.EMP_ID = E.EMP_ID
		LEFT JOIN SALES_ORDER SO ON SO.SO_CODE = MP.SO_CODE	
		LEFT JOIN COMMONCODE_DETAIL CD ON SO.QTY_UNIT = CD.CMN_DETAIL_CODE
		LEFT JOIN PRODUCTS P ON SO.PDT_CODE = P.PDT_CODE
		WHERE MP.MP_STATUS = '등록'
		ORDER BY MP.MP_NO DESC
	</select>
	
	<!-- 제조 계획 등록 -->
	<insert id="registMsPlan" parameterType="com.example.cmtProject.dto.mes.manufacturingMgt.MfgScheduleDTO">
	    <selectKey keyProperty="msCode" resultType="String" order="BEFORE">
	        SELECT 'MS-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' || LPAD(MFG_SCHEDULES_SEQ.NEXTVAL, 3, '0') FROM DUAL
	    </selectKey>
	    
	    INSERT INTO MFG_SCHEDULES (
	        MS_NO
	        , MS_CODE
	        , MP_CODE
	        , EMP_ID
	        , SO_QTY
	        , PDT_CODE
	        , MP_PRIORITY
	        , MS_CREATED_AT
	        , MS_UPDATED_AT
	    ) VALUES (
	        MFG_SCHEDULES_SEQ.NEXTVAL
	        , #{msCode}
	        , #{mpCode}
	        , #{empId}
	        , #{soQty}
	        , #{pdtCode}
	        , #{mpPriority}
	        , SYSDATE
	        , NULL
	    )
	</insert>

    <!-- 생산 계획 상태 변경 -->
    <update id="updateMpStatus">
    	UPDATE MFG_PLANS
		SET MP_STATUS = '대기'
		WHERE MP_CODE = #{mpCode}
    </update>
	
	<!-- 제조 계획 상세 조회 (하단 그리드) -->
	<select id="selectBomDetailByMsCode1" resultType="map" parameterType="String">
		SELECT
		    MSD.MSD_NO
		    , MSD.PARENT_PDT_CODE
		    , PM.NAME AS PDT_NAME
		    , MSD.ITEM_TYPE
		    , MSD.MS_QTY
		    , CD.CMN_DETAIL_NAME AS qtyUnitName
		    , MSD.MS_CODE
		FROM MFG_SCHEDULES_DETAIL MSD
		LEFT JOIN (
		    SELECT 
		        P.PDT_CODE   AS CODE
		        , P.PDT_NAME AS NAME
		    FROM PRODUCTS P
		
		    UNION ALL
		
		    SELECT 
		        M.MTL_CODE   AS CODE
		        , M.MTL_NAME AS NAME
		    FROM MATERIALS M
		) PM ON MSD.PARENT_PDT_CODE = PM.CODE
		LEFT JOIN MFG_SCHEDULES MS ON MSD.MS_CODE = MS.MS_CODE
		LEFT JOIN MFG_PLANS MP ON MS.MP_CODE = MP.MP_CODE
		LEFT JOIN SALES_ORDER SO ON MP.SO_CODE = SO.SO_CODE
		LEFT JOIN COMMONCODE_DETAIL CD ON SO.QTY_UNIT = CD.CMN_DETAIL_CODE
		WHERE MSD.MS_CODE = #{msCode}
		ORDER BY MSD.MSD_NO DESC
	</select>

	<!-- MFG_SCHEDULES_DETAIL INSERT 문 -->
	<insert id="insertBomDetailFromBom" parameterType="map">
	    INSERT INTO MFG_SCHEDULES_DETAIL (
	        MSD_NO
	        , PARENT_PDT_CODE
	        , ITEM_TYPE
	        , MS_QTY
	        , MS_CODE
	    )
	    SELECT
	        MFG_SCHEDULES_DETAIL_SEQ.NEXTVAL
	        , parentPdtCode
	        , itemType
	        , msQty
	        , msCode
	    FROM (
	        SELECT
	            B.PARENT_PDT_CODE AS parentPdtCode,
	            CASE 
	                WHEN B.PARENT_PDT_CODE LIKE 'MTL%' THEN 'RAW_MATERIAL'
	                ELSE 'SEMI_FINISHED'
	            END AS itemType,
	            (SELECT SO.SO_QTY
	             	FROM SALES_ORDER SO
	              	WHERE SO.SO_CODE = (
	                	SELECT MP.SO_CODE
	                  	FROM MFG_PLANS MP
	                  	WHERE MP.MP_CODE = (
	                    	SELECT MS.MP_CODE
	                      	FROM MFG_SCHEDULES MS
	                      	WHERE MS.MS_CODE = #{msCode}
	                  	)
	              	)
	            ) AS msQty,
	            #{msCode} AS msCode
	        FROM BOM B
	        START WITH B.CHILD_ITEM_CODE = (
	            SELECT PDT_CODE
	            FROM SALES_ORDER
	            WHERE SO_CODE = (
	                SELECT MP.SO_CODE
	                FROM MFG_PLANS MP
	                WHERE MP.MP_CODE = (
	                    SELECT MS.MP_CODE
	                    FROM MFG_SCHEDULES MS
	                    WHERE MS.MS_CODE = #{msCode}
	                )
	            )
	        )
	        CONNECT BY PRIOR B.PARENT_PDT_CODE = B.CHILD_ITEM_CODE
	    ) tmp
	    WHERE NOT EXISTS (
	        SELECT 1
	        FROM MFG_SCHEDULES_DETAIL MSD
	        WHERE MSD.PARENT_PDT_CODE = tmp.parentPdtCode
	        	AND MSD.MS_CODE = tmp.msCode
	    )
	</insert>
	
	<!-- 제조 계획 삭제 (숨김 처리) -->
	<update id="isVisibleToFalse" parameterType="java.util.List">
		UPDATE MFG_SCHEDULES
		SET MS_VISIBLE = 'N'
		WHERE MS_NO IN (
	    <foreach item="msNo" collection="list" separator=",">
	    	#{msNo}
	    </foreach>
	  	)
	</update>

</mapper>